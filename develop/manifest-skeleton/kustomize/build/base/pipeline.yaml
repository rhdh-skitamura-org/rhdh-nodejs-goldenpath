apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ${{ values.app_name }}-pipeline
spec:
  workspaces:
  - name: shared-workspace
    description: Git Repo for Patient Health Records Apps
  - name: manifest-workspace
    description: Git Repo for k8s manifest
  - name: sonar-settings
    description: Temporary dir for sonarqube-scan Task
  - name: vul-cache
    description: Cache vulnerabilities infomations
  - name: temp-dir
    description: Temporary dir for git-cli Task
  - name: basic-auth
    description: .git-credentials file for git-cli Task
  - name: quay-credentials
    description: quay credentials file for build-container Task
  params:
  #- name: imageurl
  #  type: string
  #  description: Target container registry URL
  - name: git-url
    type: string
  - name: git-revision  
    type: string
  - name: git-manifests-url
    type: string
  - name: git-manifests-revision  
    type: string
  - name: git-manifests-username 
    type: string
    description: Git Repo Username for Manifests
  - name: git-manifests-useremail  
    type: string
    description: Git Repo User Email for Manifests
  - name: argocd-version
    type: string
    default: v2.11.6
  - name: image-registry
    type: string
    {%- if values.registry == 'openshift' %}
    default: ${{ values.registry_url }}/${{ values.app_name }}-develop
    {%- endif %}
    {%- if values.registry == 'quay' %}
    default: ${{ values.registry_url }}/skitamura-quay-org/${{ values.app_name }}-develop
    {%- endif %}
#  - name: git-manifests-user-access-token 
#    type: string
#    description: Git Repo User Access Token for Manifests
  tasks:
  - name: git-clone-${{ values.app_name }}
    taskRef:
      kind: Task
      name: git-clone
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    workspaces:
    - name: output
      workspace: shared-workspace
      
  - name: git-clone-${{ values.app_name }}-manifests
    taskRef:
      kind: Task
      name: git-clone
    params:
    - name: url
      value: $(params.git-manifests-url)
    - name: revision
      value: $(params.git-manifests-revision)
    workspaces:
    - name: output
      workspace: manifest-workspace

  - name: scan-app
    taskRef:
      kind: Task
      name: sonarqube-scanner
    runAfter:
    - git-clone-${{ values.app_name }}
    - git-clone-${{ values.app_name }}-manifests
    params:
    - name: SONAR_HOST_URL
      value: 'http://sonarqube-sonarqube.sonarqube.svc:9000'
    - name: SONAR_PROJECT_KEY
      value: ${{ values.app_name }}
    workspaces:
    - name: source
      workspace: shared-workspace
    - name: sonar-settings
      workspace: sonar-settings

  - name: build-container
    taskRef:
      name: buildah-docker
      kind: Task
    runAfter:
    - scan-app
    workspaces:
    - name: source
      workspace: shared-workspace
    - name: dockerconfig
      workspace: quay-credentials
    params:
    - name: IMAGE
      #value: image-registry.openshift-image-registry.svc:5000/${{ values.app_name }}-develop/${{ values.app_name }}:$(params.git-revision)
      value: $(params.image-registry)/${{ values.app_name }}:$(params.git-revision)
    - name: CONTEXT
      value: $(workspaces.source.path)
    - name: TLSVERIFY
      value: 'false'

  - name: scan-image-rhacs
    taskRef:
      kind: Task
      name: stackrox-image-scan
    runAfter:
    - build-container
    params:
    - name: rox_central_endpoint
      value: central.stackrox.svc:443
    - name: image
      value: $(params.image-registry)/${{ values.app_name }}@$(tasks.build-container.results.IMAGE_DIGEST)
    - name: rox_api_token
      value: rox-api-token

  - name: scan-image-sysdig
    onError: continue
    taskRef:
      name: sysdig
    runAfter:
    - build-container
    params:
    - name: IMAGE
      value: $(params.image-registry)/${{ values.app_name }}
    - name: IMAGE_DIGEST
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    workspaces:
    - name: db
      workspace: shared-workspace

  - name: update-manifests
    taskRef:
      kind: Task
      name: kustomize
    runAfter:
    - scan-image-sysdig
    - scan-image-rhacs
    workspaces:
    - name: manifest-dir
      workspace: manifest-workspace
    params:
    - name: KUSTOMIZE_SCRIPT
      value: |
        cd ./kustomize/app/overlays/dev
        kustomize edit set image ___IMAGE_URL___@___IMAGE_DIGEST___=$(params.image-registry)/${{ values.app_name }}@$(tasks.build-container.results.IMAGE_DIGEST)
        cd ../stg
        kustomize edit set image ___IMAGE_URL___@___IMAGE_DIGEST___=$(params.image-registry)/${{ values.app_name }}@$(tasks.build-container.results.IMAGE_DIGEST)
        cd ../prod
        kustomize edit set image ___IMAGE_URL___@___IMAGE_DIGEST___=$(params.image-registry)/${{ values.app_name }}@$(tasks.build-container.results.IMAGE_DIGEST)


  - name: push-manifests
    taskRef:
      kind: Task
      name: git-cli
    runAfter:
    - update-manifests
    workspaces:
    - name: source
      workspace: manifest-workspace
    - name: input
      workspace: temp-dir
    - name: basic-auth
      workspace: basic-auth
    params:
    - name: GIT_USER_NAME
      value: $(params.git-manifests-username)
    - name: GIT_USER_EMAIL
      value: $(params.git-manifests-useremail)
    - name: GIT_MANIFEST_REV
      value: $(params.git-manifests-revision)
    - name: GIT_SCRIPT
      value: |
        cd $(workspaces.source.path)
        git checkout $(params.git-manifests-revision)
        git diff
        git add -A ./kustomize/app/overlays/
        git commit -m "[TEKTON-PIPELINES] Change container image in manifests."
        git push origin $(params.git-manifests-revision)
#        git config --global url.https://$(params.git-manifests-username):$(params.gitmanifests-user-access-token)@github.com/.insteadOf https://github.com/
#      value: |
#        cd $(workspaces.source.path)
#        git config --global user.email $(GIT_USER_EMAIL) 
#        git config --global user.name $(GIT_USER_NAME)
#        git checkout $(GIT_MANIFEST_REV)
#        git diff
#        git add -A ./kustomize/app/overlays/
#        git commit -m "[TEKTON-PIPELINES] Change container image in manifests."
#        git push origin $(GIT_MANIFEST_REV)
  - name: argocd-sync
    taskRef:
      kind: Task
      name: argocd-task-sync-and-wait
    runAfter: 
    - push-manifests
    params:
    - name: application-name
      value: ${{ values.app_name }}-dev
    - name: argocd-version
      value: $(params.argocd-version)
    - name: revision
      value: develop
